<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!--STYLES-->
    <link rel="stylesheet" href="/bower_components/materialize/dist/css/materialize.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
  
  <header>
    <!-- Dropdown Athlete Structure -->
    <ul id="dropdownAthlete" class="dropdown-content">
      <li><a href="/athlete/new"><%=i18n('New Athlete')%></a></li>
      <li class="divider"></li>
      <li><a href="/athlete"><%=i18n('Athletes´s List')%></a></li>
      <li class="divider"></li>
      <li><a href="/athlete?validity=true">in of date</a></li>
      <li class="divider"></li>
      <li><a href="/athlete?validity=false">out of date</a></li>
    </ul>
    <!-- Dropdown User Structure -->
    <ul id="dropdownUser" class="dropdown-content">
      <li><a href="/user/new"><%=i18n('New User')%></a></li>
      <li class="divider"></li>
      <li><a href="/user"><%=i18n('Users´s List')%></a></li>
    </ul>
    <nav>
      <div class="nav-wrapper">
        <a href="/" class="brand-logo"><%=i18n('FECET')%></a>
        <ul id="nav-mobile" class="right hide-on-med-and-down">
          <% if (session.authenticated) { %>
            <li><a href="/"><%=i18n('Main')%></a></li>
            <li>
              <a class="dropdown-button" href="#!" data-activates="dropdownUser">
                <%=i18n('Users')%><i class="material-icons right">arrow_drop_down</i>
              </a>
            </li>
            <li>
              <a class="dropdown-button" href="#!" data-activates="dropdownAthlete">
                <%=i18n('Athletes')%><i class="material-icons right">arrow_drop_down</i>
              </a>
            </li>
            <li><a href="/session/destroy" class="btn btn-default navbar-btn navbar-right">sign-out</a></li>
          <% } else { %>
            <li><a href="/session/new" class="btn btn-default navbar-btn navbar-right">log-on</a></li>
          <%}%> 
        </ul>
      </div>
    </nav>
  </header>
  
  <main>
    <%- body %>
  </main>

  <footer class="page-footer">
    <div class="container">
      <div class="row">
        <div class="col l6 s12">
          <h5 class="white-text">Footer Content</h5>
        </div>
      </div>
    </div>
    <div class="footer-copyright">
      <div class="container">
      © 2015 Copyright Text
      <a class="grey-text text-lighten-4 right" href="#!">More Links</a>
      </div>
    </div>
  </footer>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="/js/dependencies/html2canvas/html2canvas.min.js"></script>
    <script src="/js/dependencies/html2canvas/html2canvas.svg.min.js"></script>
    <script src="/bower_components/materialize/dist/js/materialize.min.js"></script>
    <script src="/js/custom.js"></script>
    <!--SCRIPTS END-->
    
  </body>
</html>
